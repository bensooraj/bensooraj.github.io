(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[976],{1807:function(s,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/8-custom-local-domain-over-https",function(){return n(8164)}])},8164:function(s,e,n){"use strict";n.r(e);var a=n(5893),l=n(1151);function t(s){var e=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",h3:"h3",pre:"pre",span:"span",ol:"ol",li:"li",h4:"h4",blockquote:"blockquote",em:"em",a:"a"},(0,l.ah)(),s.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:"Custom Local Domain over HTTPS"}),"\n",(0,a.jsx)(e.h2,{children:"Note"}),"\n",(0,a.jsxs)(e.p,{children:["This is a documention for my own reference, so I can come back to it in the future either for setting up a new custom local domain over HTTPS using ",(0,a.jsx)(e.code,{children:"docker"})," and ",(0,a.jsx)(e.code,{children:"nginx"}),", or reverting back to the original state."]}),"\n",(0,a.jsx)(e.h2,{children:"Steps"}),"\n",(0,a.jsx)(e.h3,{children:"mkcert"}),"\n",(0,a.jsx)(e.p,{children:"Install mkcert:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:[(0,a.jsx)(e.span,{className:"hljs-comment",children:"# MacOS"}),"\n$ brew install mkcert\n\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# Create and install a local certificate authority (CA), trusted locally on your device."}),"\n$ mkcert -install\n\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# List the root CA files."}),"\n$ ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"ls"})," ",(0,a.jsxs)(e.span,{className:"hljs-string",children:['"',(0,a.jsx)(e.span,{className:"hljs-subst",children:"$(mkcert -CAROOT)"}),'"']}),"\nrootCA-key.pem rootCA.pem\n\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# Create a trusted certificate."}),"\n$ ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"mkdir"})," potato_cld && ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"cd"})," potato_cld\n$ mkcert potato.cld ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"*.potato.cld"'}),"\n\nCreated a new certificate valid ",(0,a.jsx)(e.span,{className:"hljs-keyword",children:"for"})," the following names \ud83d\udcdc\n - ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"potato.cld"'}),"\n - ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"*.potato.cld"'}),"\n\nReminder: X.509 wildcards only go one level deep, so this won\\",(0,a.jsx)(e.span,{className:"hljs-string",children:'\'t match a.b.potato.cld\n\nThe certificate is at "./potato.cld+1.pem" and the key at "./potato.cld+1-key.pem" \u2705\n\nIt will expire on 11 May 2026 \ud83d\uddd3\n'})]})}),"\n",(0,a.jsxs)(e.p,{children:["The command ",(0,a.jsx)(e.code,{children:'mkcert potato.cld "*.potato.cld"'})," above does two things:"]}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"Generates a certificate for the hostname you've specified"}),"\n",(0,a.jsxs)(e.li,{children:["Lets ",(0,a.jsx)(e.code,{children:"mkcert"})," (that you've added as a local CA) sign this certificate."]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Now, the certificate is ready and signed by a certificate authority that the browser trusts locally."}),"\n",(0,a.jsx)(e.h3,{children:"Configure DNS"}),"\n",(0,a.jsxs)(e.h4,{children:["1. Modify ",(0,a.jsx)(e.code,{children:"/etc/hosts"})]}),"\n",(0,a.jsxs)(e.p,{children:["The simplest way to go about this is to update the ",(0,a.jsx)(e.code,{children:"/etc/hosts"})," as shown below,"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:[(0,a.jsx)(e.span,{className:"hljs-comment",children:"##"}),"\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# Host Database"}),"\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"#"}),"\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# localhost is used to configure the loopback interface"}),"\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# when the system is booting.  Do not change this entry."}),"\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"##"}),"\n127.0.0.1\t      localhost\n255.255.255.255\tbroadcasthost\n::1             localhost\n\n127.0.0.1       potato.cld api.potato.cld api2.potato.cld\n"]})}),"\n",(0,a.jsxs)(e.p,{children:["But that is too simple. Let's crank up the complexity so I can learn something new - ",(0,a.jsx)(e.code,{children:"dnsmasq"}),"."]}),"\n",(0,a.jsxs)(e.h4,{children:["2. Install, configure and start the ",(0,a.jsx)(e.code,{children:"dnsmasq"}),"server"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"dnsmasq"})," is a lightweight DNS, TFTP, PXE, router advertisement and DHCP server. It is intended to provide coupled DNS and DHCP service to a LAN."]}),"\n",(0,a.jsxs)(e.p,{children:["Dnsmasq accepts DNS queries and either answers them from a small, local, cache or forwards them to a real, recursive, DNS server. It loads the contents of /etc/hosts so that local hostnames which do not appear in the global DNS can be resolved and also answers DNS queries for DHCP configured hosts. It can also act as the authoritative DNS server for one or more domains, allowing local names to appear in the global DNS. ...\n",(0,a.jsx)(e.em,{children:"source"}),": ",(0,a.jsx)(e.code,{children:"man dnsmasq"})]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:[(0,a.jsx)(e.span,{className:"hljs-comment",children:"# Install"}),"\n$ brew install dnsmasq\n$ brew list dnsmasq\n/opt/homebrew/Cellar/dnsmasq/2.90/.bottle/etc/dnsmasq.conf\n/opt/homebrew/Cellar/dnsmasq/2.90/homebrew.dnsmasq.service\n/opt/homebrew/Cellar/dnsmasq/2.90/homebrew.mxcl.dnsmasq.plist\n/opt/homebrew/Cellar/dnsmasq/2.90/sbin/dnsmasq\n/opt/homebrew/Cellar/dnsmasq/2.90/share/man/man8/dnsmasq.8\n\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# Create a new directory and a `.conf` file:"}),"\n$ ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"mkdir"})," -p /Users/bsm/Development/dnsmasq.d\n$ ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"touch"})," /Users/bsm/Development/dnsmasq.d/dnsmasq.conf\n"]})}),"\n",(0,a.jsxs)(e.p,{children:["We will now uncomment and update the value of ",(0,a.jsx)(e.code,{children:"conf-dir="})," in ",(0,a.jsx)(e.code,{children:"/opt/homebrew/etc/dnsmasq.conf"})," to point to ",(0,a.jsx)(e.code,{children:"dnsmasq.conf"})," file we created above."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:["% ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"cat"})," $(brew --prefix)/etc/dnsmasq.conf | grep conf-dir\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"#conf-dir=/opt/homebrew/etc/dnsmasq.d"}),"\nconf-dir=/Users/bsm/Development/dnsmasq.d/,*.conf\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"#conf-dir=/opt/homebrew/etc/dnsmasq.d,.bak"}),"\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"#conf-dir=/opt/homebrew/etc/dnsmasq.d/,*.conf"}),"\n"]})}),"\n",(0,a.jsxs)(e.p,{children:["Next, edit ",(0,a.jsx)(e.code,{children:"/Users/bsm/Development/dnsmasq.d/dnsmasq.conf"})," and add the line ",(0,a.jsx)(e.code,{children:"address=/potato.cld/127.0.0.1"}),"."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:["$ ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"cat"})," /Users/bensoorajmohan/Development/dnsmasq.d/dnsmasq.conf \naddress=/potato.cld/127.0.0.1\n\n"]})}),"\n",(0,a.jsx)(e.p,{children:"Now,"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:[(0,a.jsx)(e.span,{className:"hljs-comment",children:"# start the `dnsmasq` service:"}),"\n$ sudo brew services start dnsmasq\n\nWarning: Taking root:admin ownership of some dnsmasq paths:\n  /opt/homebrew/Cellar/dnsmasq/2.90/sbin\n  /opt/homebrew/Cellar/dnsmasq/2.90/sbin/dnsmasq\n  /opt/homebrew/opt/dnsmasq\n  /opt/homebrew/opt/dnsmasq/sbin\n  /opt/homebrew/var/homebrew/linked/dnsmasq\n\nThis will require manual removal of these paths using `sudo ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"rm"}),"` on\nbrew upgrade/reinstall/uninstall.\n==> **Successfully started `dnsmasq` (label: homebrew.mxcl.dnsmasq)**\n\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# verify that the service is running:"}),"\n$ sudo brew services\n**Name  Status  User File**\nblack   none         \ndnsmasq started root /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist\nunbound none\n"]})}),"\n",(0,a.jsxs)(e.h4,{children:["3. Configure ",(0,a.jsx)(e.code,{children:"resolv.conf"})]}),"\n",(0,a.jsxs)(e.p,{children:["Configure the DNS server to be used for the domain ",(0,a.jsx)(e.code,{children:"potato.cld"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-shell",children:[(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"# "}),(0,a.jsxs)(e.span,{className:"bash",children:["Make a new folder called /etc/resolver/, ",(0,a.jsx)(e.span,{className:"hljs-keyword",children:"if"})," it doesn",(0,a.jsx)(e.span,{className:"hljs-string",children:"'t exist"})]}),"\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"$ "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"sudo mkdir -p /etc/resolver/"})}),"\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"# "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"Create a new file with the name of the domain you want custom DNS settings for"})}),"\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"$ "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"touch /etc/resolver/potato.cld"})}),"\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"# "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"Set the nameserver that the domain should resolve to"})}),"\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"$ "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"sudo tee /etc/resolver/potato.cld >/dev/null <<EOF"})}),"\nnameserver 127.0.0.1\nEOF\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"\n# "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"restart local dnsmasq service"})}),"\n",(0,a.jsx)(e.span,{className:"hljs-meta prompt_",children:"$ "}),(0,a.jsx)(e.span,{className:"bash",children:(0,a.jsx)(e.span,{className:"hljs-string",children:"sudo brew services restart dnsmasq"})}),"\nStopping `dnsmasq`... (might take a while)\n\n==> **Successfully stopped `dnsmasq` (label: homebrew.mxcl.dnsmasq)**\nWarning: Taking root:admin ownership of some dnsmasq paths:\n  /opt/homebrew/Cellar/dnsmasq/2.90/sbin\n  /opt/homebrew/Cellar/dnsmasq/2.90/sbin/dnsmasq\n  /opt/homebrew/opt/dnsmasq\n  /opt/homebrew/opt/dnsmasq/sbin\n  /opt/homebrew/var/homebrew/linked/dnsmasq\nThis will require manual removal of these paths using `sudo rm` on\nbrew upgrade/reinstall/uninstall.\n==> **Successfully started `dnsmasq` (label: homebrew.mxcl.dnsmasq)**\n"]})}),"\n",(0,a.jsx)(e.h3,{children:"Verify"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:["$ dscacheutil -q host -a name potato.cld\n\nname: potato.cld\nip_address: 127.0.0.1\n\n",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# Verify the new resolver was picked up"}),"\n$ scutil --dns\nDNS configuration\n\nresolver ",(0,a.jsx)(e.span,{className:"hljs-comment",children:"#8"}),"\n  domain        : potato.cld\n  nameserver[0] : 127.0.0.1\n  flags         : Request A records, Request AAAA records\n  reach         : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n"]})}),"\n",(0,a.jsx)(e.h2,{children:"Docker and Nginx"}),"\n",(0,a.jsx)(e.p,{children:"Clone the git repository and start the docker containers:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:["$ git ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"clone"})," https://github.com/bensooraj/blog-artefact-custom-local-domain.git\n$ docker-compose up -d\n\n$ curl https://api.potato.cld/ok \n200 OK: api.potato.cld\n\n$ curl https://api2.potato.cld/ok\n200 OK: api2.potato.cld\n\n$ docker ps -a\n\nCONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                      NAMES\nef88c504a751   nginx:latest            ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"/docker-entrypoint.\u2026"'}),"   2 minutes ago   Up 2 minutes   0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp   nginx\n39651f26920c   one_tls_whoami-goapi    ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"./server"'}),"               2 minutes ago   Up 2 minutes   8080/tcp, 0.0.0.0:8080->443/tcp            one_tls_whoami-goapi-1\na98caad7d4cb   one_tls_whoami-goapi2   ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"./server"'}),"               2 minutes ago   Up 2 minutes   8080/tcp, 0.0.0.0:8081->443/tcp            one_tls_whoami-goapi2-1\n\n$ docker logs nginx --",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"tail"}),"=2\n192.168.65.1 - - [15/Feb/2024:09:54:17 +0000] ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"GET /ok HTTP/1.1"'})," 200 23 ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"-"'})," ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"curl/8.1.2"'})," ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"-"'}),"\n192.168.65.1 - - [15/Feb/2024:09:54:18 +0000] ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"GET /ok HTTP/1.1"'})," 200 24 ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"-"'})," ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"curl/8.1.2"'})," ",(0,a.jsx)(e.span,{className:"hljs-string",children:'"-"'}),"\n\n$ docker logs one_tls_whoami-goapi-1 --",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"tail"}),"=2\n2024/02/15 09:54:09 INFO server started on localhost. protocol=https port=443\n2024/02/15 09:54:17 INFO Header:  X-API-ServerName=api.potato.cld\n\n$ docker logs one_tls_whoami-goapi2-1 --",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"tail"}),"=2                       \n2024/02/15 09:54:09 INFO server started on localhost. protocol=https port=443\n2024/02/15 09:54:18 INFO Header:  X-API-ServerName=api2.potato.cld\n"]})}),"\n",(0,a.jsxs)(e.p,{children:["Explore the ",(0,a.jsx)(e.code,{children:"nginx"})," configuration files:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsxs)(e.code,{className:"hljs language-bash",children:["$ ",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"cat"})," nginx/conf/api2_potato_cld.conf\n\nserver {\n\tlisten 80;\n\tlisten [::]:80;\n\tserver_name api2.potato.cld;\n\n\t",(0,a.jsx)(e.span,{className:"hljs-built_in",children:"return"})," 301 https://api2.potato.cld",(0,a.jsx)(e.span,{className:"hljs-variable",children:"$request_uri"}),";\n}\n\nserver {\n\tlisten 443 ssl;\n\tlisten [::]:443 ssl;\n\n\tserver_name api2.potato.cld;\n\n\tssl_certificate /etc/nginx/ssl/potato.cld.pem;\n\tssl_certificate_key /etc/nginx/ssl/potato.cld-key.pem;\n\n\t",(0,a.jsx)(e.span,{className:"hljs-comment",children:"# If they come here using HTTP, bounce them to the correct scheme"}),"\n\terror_page 497 https://",(0,a.jsx)(e.span,{className:"hljs-variable",children:"$server_name"}),":$server_port",(0,a.jsx)(e.span,{className:"hljs-variable",children:"$request_uri"}),";\n\n\terror_log /dev/stderr;\n\taccess_log /dev/stdout main;\n\n\tlocation / {\n\t\tproxy_set_header X-API-ServerName ",(0,a.jsx)(e.span,{className:"hljs-variable",children:"$server_name"}),";\n\t\tproxy_set_header X-Forwarded-For ",(0,a.jsx)(e.span,{className:"hljs-variable",children:"$remote_addr"}),";\n\t\tproxy_set_header Host ",(0,a.jsx)(e.span,{className:"hljs-variable",children:"$http_host"}),";\n\t\tproxy_pass https://host.docker.internal:8081;\n\t}\n}\n"]})}),"\n",(0,a.jsx)(e.h2,{children:"References"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://web.dev/articles/how-to-use-local-https",children:"How to use HTTPS for local development"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://vninja.net/2020/02/06/macos-custom-dns-resolvers/",children:"macOS: Using Custom DNS Resolvers"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://karandeepsingh.ca/post/nginx-logs-and-docker-your-ultimate-guide/",children:"Mastering NGINX Logs in Docker: From Novice to Ninja"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://dev.to/timtsoitt/how-to-resolve-local-wildcard-domains-in-macos-h5e",children:"How to create local wildcard domains in MacOS using dnsmasq?"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://gist.github.com/ogrrd/5831371",children:"Gist: Never touch your local /etc/hosts file in OS X again"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://stackoverflow.com/questions/50914268/os-x-etc-resolver-dev-isnt-working-why-not",children:'OS/X "etc/resolver/dev" isn\'t working - why not?'})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://passingcuriosity.com/2013/dnsmasq-dev-osx/",children:"Using Dnsmasq for local development on OS X"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://medium.com/@TomVance/local-domains-with-https-469036775818",children:"Local domains with HTTPS and Docker compose"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://betterprogramming.pub/docker-powered-web-development-utilizing-https-and-local-domain-names-a57f129e1c4d",children:"Docker-Powered Web Development Utilizing HTTPS and Local Domain Names"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://emmapopoola.medium.com/setting-up-a-custom-domain-for-your-local-apps-mac-os-linux-c68798722143",children:"Setting up a custom domain for your local apps (Mac OS & Linux)"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://umasrinivask.medium.com/configure-nginx-as-a-reverse-proxy-with-docker-compose-file-4ebba2b75c89",children:"Configure NGINX as a Reverse Proxy with Docker Compose file"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://stevessmarthomeguide.com/home-network-dns-dnsmasq/",children:"How to Setup a Local DNS Server Using DNSMasq"})}),"\n"]})]})}e.default=function(s){var e=void 0===s?{}:s,n=Object.assign({},(0,l.ah)(),e.components).wrapper;return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(t,e)})):t(e)}}},function(s){s.O(0,[774,888,179],(function(){return e=1807,s(s.s=e);var e}));var e=s.O();_N_E=e}]);